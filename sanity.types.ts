/**
 * ---------------------------------------------------------------------------------
 * This file has been generated by Sanity TypeGen.
 * Command: `sanity typegen generate`
 *
 * Any modifications made directly to this file will be overwritten the next time
 * the TypeScript definitions are generated. Please make changes to the Sanity
 * schema definitions and/or GROQ queries if you need to update these types.
 *
 * For more information on how to use Sanity TypeGen, visit the official documentation:
 * https://www.sanity.io/docs/sanity-typegen
 * ---------------------------------------------------------------------------------
 */

// Source: schema.json
export type OurHistory = {
  _id: string;
  _type: "ourHistory";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  header?: string;
  timelineItems?: Array<{
    header?: string;
    description?: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "blockquote";
      listItem?: "bullet" | "number";
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }>;
    icon?: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      caption?: string;
      _type: "imageAlt";
    };
    year?: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      caption?: string;
      _type: "imageAlt";
    };
    _key: string;
  }>;
};

export type OurProgram = {
  _id: string;
  _type: "ourProgram";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  header?: string;
  description?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "normal" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "blockquote";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  }>;
  missionHeader?: string;
  mission?: Array<{
    text?: string;
    number?: number;
    _key: string;
  }>;
  image?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    caption?: string;
    _type: "imageAlt";
  };
};

export type WhatWeDo = {
  _id: string;
  _type: "whatWeDo";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  header?: string;
  link?: Link;
  description?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "normal" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "blockquote";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  }>;
  image?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    caption?: string;
    _type: "imageAlt";
  };
};

export type Donation = {
  _id: string;
  _type: "donation";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  redHeader?: string;
  plainHeader?: string;
  description?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "normal" | "h1" | "h2" | "h3" | "h4" | "leftBorder";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  }>;
  image?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    caption?: string;
    _type: "imageAlt";
  };
  stats?: {
    years?: {
      number?: string;
      text?: string;
    };
    chapters?: {
      number?: string;
      text?: string;
    };
    studentsSupported?: {
      number?: string;
      text?: string;
    };
  };
};

export type DirectorsList = {
  _id: string;
  _type: "directorsList";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  header?: string;
  directorsByGroup?: Array<{
    directorGroupName?: string;
    directors?: Array<{
      directorName?: string;
      directorTitle?: string;
      image?: {
        asset?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        media?: unknown;
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        caption?: string;
        _type: "imageAlt";
      };
      description?: Array<{
        children?: Array<{
          marks?: Array<string>;
          text?: string;
          _type: "span";
          _key: string;
        }>;
        style?:
          | "normal"
          | "h1"
          | "h2"
          | "h3"
          | "h4"
          | "h5"
          | "h6"
          | "blockquote";
        listItem?: "bullet" | "number";
        markDefs?: Array<{
          href?: string;
          _type: "link";
          _key: string;
        }>;
        level?: number;
        _type: "block";
        _key: string;
      }>;
      _type: "director";
      _key: string;
    }>;
    _type: "directorGroup";
    _key: string;
  }>;
};

export type ChaptersList = {
  _id: string;
  _type: "chaptersList";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  header?: string;
  chapters?: Array<{
    title?: string;
    image?: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      caption?: string;
      _type: "imageAlt";
    };
    descriptionColor?: Color;
    description?: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal" | "h1" | "h2" | "h3" | "h4";
      listItem?: "bullet" | "number";
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }>;
    link?: Link;
    linkColor?: Color;
    _type: "chapter";
    _key: string;
  }>;
};

export type ChapterComponent = {
  _id: string;
  _type: "chapterComponent";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  header?: string;
  image?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    caption?: string;
    _type: "imageAlt";
  };
  timeline?: Array<{
    title?: string;
    header?: string;
    subHeader?: string;
    description?: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal" | "h1" | "h2" | "h3" | "h4";
      listItem?: "bullet" | "number";
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }>;
    _type: "timelineItem";
    _key: string;
  }>;
  imageGallery?: Array<{
    image?: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      caption?: string;
      _type: "imageAlt";
    };
    imageColumnStart?: number;
    imageColumnEnd?: number;
    imageRowStart?: number;
    imageRowEnd?: number;
    _type: "galleryImage";
    _key: string;
  }>;
};

export type ChaptersGallery = {
  _id: string;
  _type: "chaptersGallery";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  header?: string;
  subHeader?: string;
  chapters?: Array<{
    chapterTitle?: string;
    link?: Link;
    image?: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      caption?: string;
      _type: "imageAlt";
    };
    _type: "chapter";
    _key: string;
  }>;
  chaptersLink?: Link;
  directorsLink?: Link;
};

export type TeamMembersBlock = {
  _id: string;
  _type: "teamMembersBlock";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  header?: string;
  teamMembers?: Array<{
    image?: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      caption?: string;
      _type: "imageAlt";
    };
    memberTitle?: string;
    memberName?: string;
    memberDescription?: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal" | "h1" | "h2" | "h3" | "h4";
      listItem?: "bullet" | "number";
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }>;
    memberLink?: Link;
    _type: "teamMember";
    _key: string;
  }>;
};

export type TestimonialsBlock = {
  _id: string;
  _type: "testimonialsBlock";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  header?: string;
  testimonials?: Array<{
    icon?: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      caption?: string;
      _type: "imageAlt";
    };
    testimonialSource?: string;
    testimonialContent?: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal" | "h3" | "yellowH3";
      listItem?: "bullet" | "number";
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }>;
    _type: "socialLink";
    _key: string;
  }>;
};

export type OpenerWithCarousel = {
  _id: string;
  _type: "openerWithCarousel";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  header?: string;
  subHeader?: string;
  tagline?: string;
  link?: Link;
  bgColor?: Color;
  photos?: Array<{
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    caption?: string;
    _type: "photo";
    _key: string;
  }>;
};

export type PressReleasesGallery = {
  _id: string;
  _type: "pressReleasesGallery";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  header?: string;
  tagText?: string;
  tagColor?: Color;
  pressReleases?: Array<{
    link?: Link;
    image?: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      caption?: string;
      _type: "imageAlt";
    };
    _type: "pressReleases";
    _key: string;
  }>;
  helpImage?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    caption?: string;
    _type: "imageAlt";
  };
  helpHeader?: string;
  helpText?: string;
};

export type Footer = {
  _id: string;
  _type: "footer";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  message?: string;
  address?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "normal" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "blockquote";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  }>;
  contact?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "normal" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "blockquote";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  }>;
  socials?: Array<{
    link?: Link;
    icon?: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      caption?: string;
      _type: "imageAlt";
    };
    _type: "socialLink";
    _key: string;
  }>;
};

export type ImageAlt = {
  _type: "imageAlt";
  asset?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
  };
  media?: unknown;
  hotspot?: SanityImageHotspot;
  crop?: SanityImageCrop;
  caption?: string;
};

export type SiteSettings = {
  _id: string;
  _type: "siteSettings";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  SEO?: Seo;
};

export type Header = {
  _id: string;
  _type: "header";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  navList?: Array<
    {
      _key: string;
    } & Link
  >;
};

export type Color = {
  _type: "color";
  hex?: string;
  alpha?: number;
  hsl?: HslaColor;
  hsv?: HsvaColor;
  rgb?: RgbaColor;
};

export type RgbaColor = {
  _type: "rgbaColor";
  r?: number;
  g?: number;
  b?: number;
  a?: number;
};

export type HsvaColor = {
  _type: "hsvaColor";
  h?: number;
  s?: number;
  v?: number;
  a?: number;
};

export type HslaColor = {
  _type: "hslaColor";
  h?: number;
  s?: number;
  l?: number;
  a?: number;
};

export type Link = {
  _type: "link";
  text?: string;
  type?: string;
  internalLink?:
    | {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "page";
      }
    | {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "homepage";
      };
  url?: string;
  email?: string;
  phone?: string;
  value?: string;
  blank?: boolean;
  parameters?: string;
  anchor?: string;
};

export type Homepage = {
  _id: string;
  _type: "homepage";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  content?: Array<
    | {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "pressReleasesGallery";
      }
    | {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "openerWithCarousel";
      }
    | {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "testimonialsBlock";
      }
    | {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "teamMembersBlock";
      }
    | {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "chaptersGallery";
      }
    | {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "chapterComponent";
      }
    | {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "chaptersList";
      }
    | {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "directorsList";
      }
    | {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "donation";
      }
    | {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "whatWeDo";
      }
    | {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "ourProgram";
      }
    | {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "ourHistory";
      }
  >;
  SEO?: Seo;
};

export type Page = {
  _id: string;
  _type: "page";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  slug?: Slug;
  content?: Array<
    | {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "pressReleasesGallery";
      }
    | {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "openerWithCarousel";
      }
    | {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "testimonialsBlock";
      }
    | {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "teamMembersBlock";
      }
    | {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "chaptersGallery";
      }
    | {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "chapterComponent";
      }
    | {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "chaptersList";
      }
    | {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "directorsList";
      }
    | {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "donation";
      }
    | {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "whatWeDo";
      }
    | {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "ourProgram";
      }
    | {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "ourHistory";
      }
  >;
  SEO?: Seo;
};

export type Seo = {
  _type: "seo";
  metaTitle?: string;
  metaDescription?: string;
  openGraphTitle?: string;
  openGraphDescription?: string;
  openGraphImage?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
  };
  includeInSitemap?: boolean;
  disallowRobots?: boolean;
  initSeo?: boolean;
};

export type SanityImagePaletteSwatch = {
  _type: "sanity.imagePaletteSwatch";
  background?: string;
  foreground?: string;
  population?: number;
  title?: string;
};

export type SanityImagePalette = {
  _type: "sanity.imagePalette";
  darkMuted?: SanityImagePaletteSwatch;
  lightVibrant?: SanityImagePaletteSwatch;
  darkVibrant?: SanityImagePaletteSwatch;
  vibrant?: SanityImagePaletteSwatch;
  dominant?: SanityImagePaletteSwatch;
  lightMuted?: SanityImagePaletteSwatch;
  muted?: SanityImagePaletteSwatch;
};

export type SanityImageDimensions = {
  _type: "sanity.imageDimensions";
  height?: number;
  width?: number;
  aspectRatio?: number;
};

export type SanityImageHotspot = {
  _type: "sanity.imageHotspot";
  x?: number;
  y?: number;
  height?: number;
  width?: number;
};

export type SanityImageCrop = {
  _type: "sanity.imageCrop";
  top?: number;
  bottom?: number;
  left?: number;
  right?: number;
};

export type SanityFileAsset = {
  _id: string;
  _type: "sanity.fileAsset";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  originalFilename?: string;
  label?: string;
  title?: string;
  description?: string;
  altText?: string;
  sha1hash?: string;
  extension?: string;
  mimeType?: string;
  size?: number;
  assetId?: string;
  uploadId?: string;
  path?: string;
  url?: string;
  source?: SanityAssetSourceData;
};

export type SanityImageAsset = {
  _id: string;
  _type: "sanity.imageAsset";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  originalFilename?: string;
  label?: string;
  title?: string;
  description?: string;
  altText?: string;
  sha1hash?: string;
  extension?: string;
  mimeType?: string;
  size?: number;
  assetId?: string;
  uploadId?: string;
  path?: string;
  url?: string;
  metadata?: SanityImageMetadata;
  source?: SanityAssetSourceData;
};

export type SanityImageMetadata = {
  _type: "sanity.imageMetadata";
  location?: Geopoint;
  dimensions?: SanityImageDimensions;
  palette?: SanityImagePalette;
  lqip?: string;
  blurHash?: string;
  hasAlpha?: boolean;
  isOpaque?: boolean;
};

export type Geopoint = {
  _type: "geopoint";
  lat?: number;
  lng?: number;
  alt?: number;
};

export type Slug = {
  _type: "slug";
  current?: string;
  source?: string;
};

export type SanityAssetSourceData = {
  _type: "sanity.assetSourceData";
  name?: string;
  id?: string;
  url?: string;
};

export type AllSanitySchemaTypes =
  | OurHistory
  | OurProgram
  | WhatWeDo
  | Donation
  | DirectorsList
  | ChaptersList
  | ChapterComponent
  | ChaptersGallery
  | TeamMembersBlock
  | TestimonialsBlock
  | OpenerWithCarousel
  | PressReleasesGallery
  | Footer
  | ImageAlt
  | SiteSettings
  | Header
  | Color
  | RgbaColor
  | HsvaColor
  | HslaColor
  | Link
  | Homepage
  | Page
  | Seo
  | SanityImagePaletteSwatch
  | SanityImagePalette
  | SanityImageDimensions
  | SanityImageHotspot
  | SanityImageCrop
  | SanityFileAsset
  | SanityImageAsset
  | SanityImageMetadata
  | Geopoint
  | Slug
  | SanityAssetSourceData;
export declare const internalGroqTypeReferenceTo: unique symbol;
// Source: ./sanity/lib/queries.ts
// Variable: openerWithCarouselData
// Query: {    _id,    _type,    header,    subHeader,    'bgColor': bgColor.hex,    tagline,      _type == "link" => {    ...,    internalLink->{_type,slug,title}  },    photos[] {    caption,    'assetId': asset->_id,    'assetPath': asset->path,    'aspectRatio': asset->metadata.dimensions.aspectRatio,}}
export type OpenerWithCarouselDataResult = {
  _id: never;
  _type: never;
  header: never;
  subHeader: never;
  bgColor: never;
  tagline: never;
  photos: never;
};
// Variable: testimonialsBlockQuery
// Query: {    'testimonialsBlock': *[_type == 'testimonialsBlock'][0] {    _id,    title,    header,    testimonials[] {    icon {    caption,    'assetId': asset->_id,    'assetPath': asset->path,    'aspectRatio': asset->metadata.dimensions.aspectRatio,},    testimonialSource,    testimonialContent[] {      ...,        _type == "link" => {    ...,    internalLink->{_type,slug,title}  },    },}  }}
export type TestimonialsBlockQueryResult = {
  testimonialsBlock: {
    _id: string;
    title: string | null;
    header: string | null;
    testimonials: Array<{
      icon: {
        caption: string | null;
        assetId: string | null;
        assetPath: string | null;
        aspectRatio: number | null;
      } | null;
      testimonialSource: string | null;
      testimonialContent: Array<{
        children?: Array<{
          marks?: Array<string>;
          text?: string;
          _type: "span";
          _key: string;
        }>;
        style?: "h3" | "normal" | "yellowH3";
        listItem?: "bullet" | "number";
        markDefs?: Array<{
          href?: string;
          _type: "link";
          _key: string;
        }>;
        level?: number;
        _type: "block";
        _key: string;
      }> | null;
    }> | null;
  } | null;
};
// Variable: teamMembersBlockQuery
// Query: {    'teamMembersBlock': *[_type == 'teamMembersBlock'][0] {    ...,    teamMembers[] {    ...,    image {    caption,    'assetId': asset->_id,    'assetPath': asset->path,    'aspectRatio': asset->metadata.dimensions.aspectRatio,},      _type == "link" => {    ...,    internalLink->{_type,slug,title}  }}}}
export type TeamMembersBlockQueryResult = {
  teamMembersBlock: {
    _id: string;
    _type: "teamMembersBlock";
    _createdAt: string;
    _updatedAt: string;
    _rev: string;
    title?: string;
    header?: string;
    teamMembers: Array<{
      image: {
        caption: string | null;
        assetId: string | null;
        assetPath: string | null;
        aspectRatio: number | null;
      } | null;
      memberTitle?: string;
      memberName?: string;
      memberDescription?: Array<{
        children?: Array<{
          marks?: Array<string>;
          text?: string;
          _type: "span";
          _key: string;
        }>;
        style?: "h1" | "h2" | "h3" | "h4" | "normal";
        listItem?: "bullet" | "number";
        markDefs?: Array<{
          href?: string;
          _type: "link";
          _key: string;
        }>;
        level?: number;
        _type: "block";
        _key: string;
      }>;
      memberLink?: Link;
      _type: "teamMember";
      _key: string;
    }> | null;
  } | null;
};
// Variable: pressReleasesGalleryQuery
// Query: {    'pressReleasesGallery': *[_type == 'pressReleasesGallery'][0] {    ...,    'tagColor': tagColor.hex,    pressReleases[] {    ...,    image {    caption,    'assetId': asset->_id,    'assetPath': asset->path,    'aspectRatio': asset->metadata.dimensions.aspectRatio,},      _type == "link" => {    ...,    internalLink->{_type,slug,title}  }},    helpImage {    caption,    'assetId': asset->_id,    'assetPath': asset->path,    'aspectRatio': asset->metadata.dimensions.aspectRatio,},    helpHeader,    helpText}}
export type PressReleasesGalleryQueryResult = {
  pressReleasesGallery: {
    _id: string;
    _type: "pressReleasesGallery";
    _createdAt: string;
    _updatedAt: string;
    _rev: string;
    title?: string;
    header?: string;
    tagText?: string;
    tagColor: string | null;
    pressReleases: Array<{
      link?: Link;
      image: {
        caption: string | null;
        assetId: string | null;
        assetPath: string | null;
        aspectRatio: number | null;
      } | null;
      _type: "pressReleases";
      _key: string;
    }> | null;
    helpImage: {
      caption: string | null;
      assetId: string | null;
      assetPath: string | null;
      aspectRatio: number | null;
    } | null;
    helpHeader: string | null;
    helpText: string | null;
  } | null;
};
// Variable: chaptersGalleryQuery
// Query: {    'chaptersGallery': *[_type == 'chaptersGallery'][0] {    ...,    title,    header,    subHeader,    chaptersLink {...,   _type == "link" => {    ...,    internalLink->{_type,slug,title}  }},    directorsLink {...,   _type == "link" => {    ...,    internalLink->{_type,slug,title}  }},    chapters[] {    ...,    chapterTitle,    image {    caption,    'assetId': asset->_id,    'assetPath': asset->path,    'aspectRatio': asset->metadata.dimensions.aspectRatio,},      _type == "link" => {    ...,    internalLink->{_type,slug,title}  }}}}
export type ChaptersGalleryQueryResult = {
  chaptersGallery: {
    _id: string;
    _type: "chaptersGallery";
    _createdAt: string;
    _updatedAt: string;
    _rev: string;
    title: string | null;
    header: string | null;
    subHeader: string | null;
    chapters: Array<{
      chapterTitle: string | null;
      link?: Link;
      image: {
        caption: string | null;
        assetId: string | null;
        assetPath: string | null;
        aspectRatio: number | null;
      } | null;
      _type: "chapter";
      _key: string;
    }> | null;
    chaptersLink: {
      _type: "link";
      text?: string;
      type?: string;
      internalLink:
        | {
            _type: "homepage";
            slug: null;
            title: null;
          }
        | {
            _type: "page";
            slug: Slug | null;
            title: string | null;
          }
        | null;
      url?: string;
      email?: string;
      phone?: string;
      value?: string;
      blank?: boolean;
      parameters?: string;
      anchor?: string;
    } | null;
    directorsLink: {
      _type: "link";
      text?: string;
      type?: string;
      internalLink:
        | {
            _type: "homepage";
            slug: null;
            title: null;
          }
        | {
            _type: "page";
            slug: Slug | null;
            title: string | null;
          }
        | null;
      url?: string;
      email?: string;
      phone?: string;
      value?: string;
      blank?: boolean;
      parameters?: string;
      anchor?: string;
    } | null;
  } | null;
};
// Variable: chapterComponentQuery
// Query: {    'chapterComponent': *[_type == 'chapterComponent'][0] {    ...,    title,    header,    image {    caption,    'assetId': asset->_id,    'assetPath': asset->path,    'aspectRatio': asset->metadata.dimensions.aspectRatio,},    timeline[] {        ...,        title,        header,        subHeader,        description[] {            ...,              _type == "link" => {    ...,    internalLink->{_type,slug,title}  },        },            },    imageGallery[] {        ...,        image {    caption,    'assetId': asset->_id,    'assetPath': asset->path,    'aspectRatio': asset->metadata.dimensions.aspectRatio,},        imageColumnStart,        imageColumnEnd,        imageRowStart,        imageRowEnd,    }}}
export type ChapterComponentQueryResult = {
  chapterComponent: {
    _id: string;
    _type: "chapterComponent";
    _createdAt: string;
    _updatedAt: string;
    _rev: string;
    title: string | null;
    header: string | null;
    image: {
      caption: string | null;
      assetId: string | null;
      assetPath: string | null;
      aspectRatio: number | null;
    } | null;
    timeline: Array<{
      title: string | null;
      header: string | null;
      subHeader: string | null;
      description: Array<{
        children?: Array<{
          marks?: Array<string>;
          text?: string;
          _type: "span";
          _key: string;
        }>;
        style?: "h1" | "h2" | "h3" | "h4" | "normal";
        listItem?: "bullet" | "number";
        markDefs?: Array<{
          href?: string;
          _type: "link";
          _key: string;
        }>;
        level?: number;
        _type: "block";
        _key: string;
      }> | null;
      _type: "timelineItem";
      _key: string;
    }> | null;
    imageGallery: Array<{
      image: {
        caption: string | null;
        assetId: string | null;
        assetPath: string | null;
        aspectRatio: number | null;
      } | null;
      imageColumnStart: number | null;
      imageColumnEnd: number | null;
      imageRowStart: number | null;
      imageRowEnd: number | null;
      _type: "galleryImage";
      _key: string;
    }> | null;
  } | null;
};
// Variable: chaptersListQuery
// Query: {    'chaptersList': *[_type == 'chaptersList'][0] {    ...,    header,    chapters[] {        ...,        title,        description,        'descriptionColor': descriptionColor.hex,        image {    caption,    'assetId': asset->_id,    'assetPath': asset->path,    'aspectRatio': asset->metadata.dimensions.aspectRatio,},        'linkColor': linkColor.hex,        link {...,   _type == "link" => {    ...,    internalLink->{_type,slug,title}  }},    }}}
export type ChaptersListQueryResult = {
  chaptersList: {
    _id: string;
    _type: "chaptersList";
    _createdAt: string;
    _updatedAt: string;
    _rev: string;
    title?: string;
    header: string | null;
    chapters: Array<{
      title: string | null;
      image: {
        caption: string | null;
        assetId: string | null;
        assetPath: string | null;
        aspectRatio: number | null;
      } | null;
      descriptionColor: string | null;
      description: Array<{
        children?: Array<{
          marks?: Array<string>;
          text?: string;
          _type: "span";
          _key: string;
        }>;
        style?: "h1" | "h2" | "h3" | "h4" | "normal";
        listItem?: "bullet" | "number";
        markDefs?: Array<{
          href?: string;
          _type: "link";
          _key: string;
        }>;
        level?: number;
        _type: "block";
        _key: string;
      }> | null;
      link: {
        _type: "link";
        text?: string;
        type?: string;
        internalLink:
          | {
              _type: "homepage";
              slug: null;
              title: null;
            }
          | {
              _type: "page";
              slug: Slug | null;
              title: string | null;
            }
          | null;
        url?: string;
        email?: string;
        phone?: string;
        value?: string;
        blank?: boolean;
        parameters?: string;
        anchor?: string;
      } | null;
      linkColor: string | null;
      _type: "chapter";
      _key: string;
    }> | null;
  } | null;
};
// Variable: directorsListQuery
// Query: {    'directorsList': *[_type == 'directorsList'][0] {    ...,    header,    directorsByGroup[] {        directorGroupName,        directors[] {            directorName,            directorTitle,            image {    caption,    'assetId': asset->_id,    'assetPath': asset->path,    'aspectRatio': asset->metadata.dimensions.aspectRatio,},            description[] {                ...,                  _type == "link" => {    ...,    internalLink->{_type,slug,title}  },            },        },    },}}
export type DirectorsListQueryResult = {
  directorsList: {
    _id: string;
    _type: "directorsList";
    _createdAt: string;
    _updatedAt: string;
    _rev: string;
    header: string | null;
    directorsByGroup: Array<{
      directorGroupName: string | null;
      directors: Array<{
        directorName: string | null;
        directorTitle: string | null;
        image: {
          caption: string | null;
          assetId: string | null;
          assetPath: string | null;
          aspectRatio: number | null;
        } | null;
        description: Array<{
          children?: Array<{
            marks?: Array<string>;
            text?: string;
            _type: "span";
            _key: string;
          }>;
          style?:
            | "blockquote"
            | "h1"
            | "h2"
            | "h3"
            | "h4"
            | "h5"
            | "h6"
            | "normal";
          listItem?: "bullet" | "number";
          markDefs?: Array<{
            href?: string;
            _type: "link";
            _key: string;
          }>;
          level?: number;
          _type: "block";
          _key: string;
        }> | null;
      }> | null;
    }> | null;
  } | null;
};
// Variable: donationQuery
// Query: {    'donation': *[_type == 'donation'][0] {    ...,    title,    redHeader,    plainHeader,    description[] {            ...,              _type == "link" => {    ...,    internalLink->{_type,slug,title}  },    },    image {    caption,    'assetId': asset->_id,    'assetPath': asset->path,    'aspectRatio': asset->metadata.dimensions.aspectRatio,},    stats {        ...,        years {            ...,            number,            text,        },        chapters {            ...,            number,            text,        },        studentsSupported {            ...,            number,            text,        },    }}}
export type DonationQueryResult = {
  donation: {
    _id: string;
    _type: "donation";
    _createdAt: string;
    _updatedAt: string;
    _rev: string;
    title: string | null;
    redHeader: string | null;
    plainHeader: string | null;
    description: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "h1" | "h2" | "h3" | "h4" | "leftBorder" | "normal";
      listItem?: "bullet" | "number";
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    image: {
      caption: string | null;
      assetId: string | null;
      assetPath: string | null;
      aspectRatio: number | null;
    } | null;
    stats: {
      years: {
        number: string | null;
        text: string | null;
      } | null;
      chapters: {
        number: string | null;
        text: string | null;
      } | null;
      studentsSupported: {
        number: string | null;
        text: string | null;
      } | null;
    } | null;
  } | null;
};
// Variable: whatWeDoQuery
// Query: {    'whatWeDo': *[_type == 'whatWeDo'][0] {    ...,    title,    header,    description,    image {    caption,    'assetId': asset->_id,    'assetPath': asset->path,    'aspectRatio': asset->metadata.dimensions.aspectRatio,},      _type == "link" => {    ...,    internalLink->{_type,slug,title}  },}}
export type WhatWeDoQueryResult = {
  whatWeDo: {
    _id: string;
    _type: "whatWeDo";
    _createdAt: string;
    _updatedAt: string;
    _rev: string;
    title: string | null;
    header: string | null;
    link?: Link;
    description: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "normal";
      listItem?: "bullet" | "number";
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    image: {
      caption: string | null;
      assetId: string | null;
      assetPath: string | null;
      aspectRatio: number | null;
    } | null;
  } | null;
};
// Variable: ourProgramQuery
// Query: {    'ourProgram': *[_type == 'ourProgram'][0] {    ...,    title,    header,    description,    missionHeader,    mission[] {        ...,        number,        text,    },    image {    caption,    'assetId': asset->_id,    'assetPath': asset->path,    'aspectRatio': asset->metadata.dimensions.aspectRatio,},}}
export type OurProgramQueryResult = {
  ourProgram: {
    _id: string;
    _type: "ourProgram";
    _createdAt: string;
    _updatedAt: string;
    _rev: string;
    title: string | null;
    header: string | null;
    description: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "normal";
      listItem?: "bullet" | "number";
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    missionHeader: string | null;
    mission: Array<{
      text: string | null;
      number: number | null;
      _key: string;
    }> | null;
    image: {
      caption: string | null;
      assetId: string | null;
      assetPath: string | null;
      aspectRatio: number | null;
    } | null;
  } | null;
};
// Variable: ourHistoryQuery
// Query: {    'ourHistory': *[_type == 'ourHistory'][0] {    ...,    title,    header,    timelineItems[] {        ...,        header,        description,        icon {    caption,    'assetId': asset->_id,    'assetPath': asset->path,    'aspectRatio': asset->metadata.dimensions.aspectRatio,},        year {    caption,    'assetId': asset->_id,    'assetPath': asset->path,    'aspectRatio': asset->metadata.dimensions.aspectRatio,},    }}}
export type OurHistoryQueryResult = {
  ourHistory: {
    _id: string;
    _type: "ourHistory";
    _createdAt: string;
    _updatedAt: string;
    _rev: string;
    title: string | null;
    header: string | null;
    timelineItems: Array<{
      header: string | null;
      description: Array<{
        children?: Array<{
          marks?: Array<string>;
          text?: string;
          _type: "span";
          _key: string;
        }>;
        style?:
          | "blockquote"
          | "h1"
          | "h2"
          | "h3"
          | "h4"
          | "h5"
          | "h6"
          | "normal";
        listItem?: "bullet" | "number";
        markDefs?: Array<{
          href?: string;
          _type: "link";
          _key: string;
        }>;
        level?: number;
        _type: "block";
        _key: string;
      }> | null;
      icon: {
        caption: string | null;
        assetId: string | null;
        assetPath: string | null;
        aspectRatio: number | null;
      } | null;
      year: {
        caption: string | null;
        assetId: string | null;
        assetPath: string | null;
        aspectRatio: number | null;
      } | null;
      _key: string;
    }> | null;
  } | null;
};
// Variable: headerQuery
// Query: {    'header': *[_type == 'header'][0] {        navList[] {            ...,              _type == "link" => {    ...,    internalLink->{_type,slug,title}  },        }    }}
export type HeaderQueryResult = {
  header: {
    navList: Array<{
      _key: string;
      _type: "link";
      text?: string;
      type?: string;
      internalLink:
        | {
            _type: "homepage";
            slug: null;
            title: null;
          }
        | {
            _type: "page";
            slug: Slug | null;
            title: string | null;
          }
        | null;
      url?: string;
      email?: string;
      phone?: string;
      value?: string;
      blank?: boolean;
      parameters?: string;
      anchor?: string;
    }> | null;
  } | null;
};
// Variable: footerQuery
// Query: {    'footer': *[_type == 'footer'][0] {            ...,            socials[]     {    ...,    icon {    caption,    'assetId': asset->_id,    'assetPath': asset->path,    'aspectRatio': asset->metadata.dimensions.aspectRatio,},      _type == "link" => {    ...,    internalLink->{_type,slug,title}  }    }    }}
export type FooterQueryResult = {
  footer: {
    _id: string;
    _type: "footer";
    _createdAt: string;
    _updatedAt: string;
    _rev: string;
    message?: string;
    address?: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "normal";
      listItem?: "bullet" | "number";
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }>;
    contact?: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "normal";
      listItem?: "bullet" | "number";
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }>;
    socials: Array<{
      link?: Link;
      icon: {
        caption: string | null;
        assetId: string | null;
        assetPath: string | null;
        aspectRatio: number | null;
      } | null;
      _type: "socialLink";
      _key: string;
    }> | null;
  } | null;
};
// Variable: siteSettingsQuery
// Query: *[_type == 'siteSettings'][0] {        SEO {    ...,    'openGraphImage': openGraphImage.asset->url,},    }
export type SiteSettingsQueryResult = {
  SEO: {
    _type: "seo";
    metaTitle?: string;
    metaDescription?: string;
    openGraphTitle?: string;
    openGraphDescription?: string;
    openGraphImage: string | null;
    includeInSitemap?: boolean;
    disallowRobots?: boolean;
    initSeo?: boolean;
  } | null;
} | null;
// Variable: homepageQuery
// Query: {    'homepage': *[_type == 'homepage'][0] {        ...,        content[]->{    ...,    _type == 'openerWithCarousel' => {    _id,    _type,    header,    subHeader,    'bgColor': bgColor.hex,    tagline,      _type == "link" => {    ...,    internalLink->{_type,slug,title}  },    photos[] {    caption,    'assetId': asset->_id,    'assetPath': asset->path,    'aspectRatio': asset->metadata.dimensions.aspectRatio,}},    _type == 'testimonialsBlock' => {    _id,    title,    header,    testimonials[] {    icon {    caption,    'assetId': asset->_id,    'assetPath': asset->path,    'aspectRatio': asset->metadata.dimensions.aspectRatio,},    testimonialSource,    testimonialContent[] {      ...,        _type == "link" => {    ...,    internalLink->{_type,slug,title}  },    },}  },    _type == 'teamMembersBlock' => {    ...,    teamMembers[] {    ...,    image {    caption,    'assetId': asset->_id,    'assetPath': asset->path,    'aspectRatio': asset->metadata.dimensions.aspectRatio,},      _type == "link" => {    ...,    internalLink->{_type,slug,title}  }}},    _type == 'pressReleasesGallery' => {    ...,    'tagColor': tagColor.hex,    pressReleases[] {    ...,    image {    caption,    'assetId': asset->_id,    'assetPath': asset->path,    'aspectRatio': asset->metadata.dimensions.aspectRatio,},      _type == "link" => {    ...,    internalLink->{_type,slug,title}  }},    helpImage {    caption,    'assetId': asset->_id,    'assetPath': asset->path,    'aspectRatio': asset->metadata.dimensions.aspectRatio,},    helpHeader,    helpText},    _type == 'chaptersGallery' => {    ...,    title,    header,    subHeader,    chaptersLink {...,   _type == "link" => {    ...,    internalLink->{_type,slug,title}  }},    directorsLink {...,   _type == "link" => {    ...,    internalLink->{_type,slug,title}  }},    chapters[] {    ...,    chapterTitle,    image {    caption,    'assetId': asset->_id,    'assetPath': asset->path,    'aspectRatio': asset->metadata.dimensions.aspectRatio,},      _type == "link" => {    ...,    internalLink->{_type,slug,title}  }}},    _type == 'chapterComponent' => {    ...,    title,    header,    image {    caption,    'assetId': asset->_id,    'assetPath': asset->path,    'aspectRatio': asset->metadata.dimensions.aspectRatio,},    timeline[] {        ...,        title,        header,        subHeader,        description[] {            ...,              _type == "link" => {    ...,    internalLink->{_type,slug,title}  },        },            },    imageGallery[] {        ...,        image {    caption,    'assetId': asset->_id,    'assetPath': asset->path,    'aspectRatio': asset->metadata.dimensions.aspectRatio,},        imageColumnStart,        imageColumnEnd,        imageRowStart,        imageRowEnd,    }},    _type == 'chaptersList' => {    ...,    header,    chapters[] {        ...,        title,        description,        'descriptionColor': descriptionColor.hex,        image {    caption,    'assetId': asset->_id,    'assetPath': asset->path,    'aspectRatio': asset->metadata.dimensions.aspectRatio,},        'linkColor': linkColor.hex,        link {...,   _type == "link" => {    ...,    internalLink->{_type,slug,title}  }},    }},    _type == 'directorsList' => {    ...,    header,    directorsByGroup[] {        directorGroupName,        directors[] {            directorName,            directorTitle,            image {    caption,    'assetId': asset->_id,    'assetPath': asset->path,    'aspectRatio': asset->metadata.dimensions.aspectRatio,},            description[] {                ...,                  _type == "link" => {    ...,    internalLink->{_type,slug,title}  },            },        },    },},    _type == 'donation' => {    ...,    title,    redHeader,    plainHeader,    description[] {            ...,              _type == "link" => {    ...,    internalLink->{_type,slug,title}  },    },    image {    caption,    'assetId': asset->_id,    'assetPath': asset->path,    'aspectRatio': asset->metadata.dimensions.aspectRatio,},    stats {        ...,        years {            ...,            number,            text,        },        chapters {            ...,            number,            text,        },        studentsSupported {            ...,            number,            text,        },    }},    _type == 'whatWeDo' => {    ...,    title,    header,    description,    image {    caption,    'assetId': asset->_id,    'assetPath': asset->path,    'aspectRatio': asset->metadata.dimensions.aspectRatio,},      _type == "link" => {    ...,    internalLink->{_type,slug,title}  },},    _type == 'ourProgram' => {    ...,    title,    header,    description,    missionHeader,    mission[] {        ...,        number,        text,    },    image {    caption,    'assetId': asset->_id,    'assetPath': asset->path,    'aspectRatio': asset->metadata.dimensions.aspectRatio,},},    _type == 'ourHistory' => {    ...,    title,    header,    timelineItems[] {        ...,        header,        description,        icon {    caption,    'assetId': asset->_id,    'assetPath': asset->path,    'aspectRatio': asset->metadata.dimensions.aspectRatio,},        year {    caption,    'assetId': asset->_id,    'assetPath': asset->path,    'aspectRatio': asset->metadata.dimensions.aspectRatio,},    }}},        SEO {    ...,    'openGraphImage': openGraphImage.asset->url,},    }}
export type HomepageQueryResult = {
  homepage: {
    _id: string;
    _type: "homepage";
    _createdAt: string;
    _updatedAt: string;
    _rev: string;
    content: Array<
      | {
          _id: string;
          _type: "chapterComponent";
          _createdAt: string;
          _updatedAt: string;
          _rev: string;
          title: string | null;
          header: string | null;
          image: {
            caption: string | null;
            assetId: string | null;
            assetPath: string | null;
            aspectRatio: number | null;
          } | null;
          timeline: Array<{
            title: string | null;
            header: string | null;
            subHeader: string | null;
            description: Array<{
              children?: Array<{
                marks?: Array<string>;
                text?: string;
                _type: "span";
                _key: string;
              }>;
              style?: "h1" | "h2" | "h3" | "h4" | "normal";
              listItem?: "bullet" | "number";
              markDefs?: Array<{
                href?: string;
                _type: "link";
                _key: string;
              }>;
              level?: number;
              _type: "block";
              _key: string;
            }> | null;
            _type: "timelineItem";
            _key: string;
          }> | null;
          imageGallery: Array<{
            image: {
              caption: string | null;
              assetId: string | null;
              assetPath: string | null;
              aspectRatio: number | null;
            } | null;
            imageColumnStart: number | null;
            imageColumnEnd: number | null;
            imageRowStart: number | null;
            imageRowEnd: number | null;
            _type: "galleryImage";
            _key: string;
          }> | null;
        }
      | {
          _id: string;
          _type: "chaptersGallery";
          _createdAt: string;
          _updatedAt: string;
          _rev: string;
          title: string | null;
          header: string | null;
          subHeader: string | null;
          chapters: Array<{
            chapterTitle: string | null;
            link?: Link;
            image: {
              caption: string | null;
              assetId: string | null;
              assetPath: string | null;
              aspectRatio: number | null;
            } | null;
            _type: "chapter";
            _key: string;
          }> | null;
          chaptersLink: {
            _type: "link";
            text?: string;
            type?: string;
            internalLink:
              | {
                  _type: "homepage";
                  slug: null;
                  title: null;
                }
              | {
                  _type: "page";
                  slug: Slug | null;
                  title: string | null;
                }
              | null;
            url?: string;
            email?: string;
            phone?: string;
            value?: string;
            blank?: boolean;
            parameters?: string;
            anchor?: string;
          } | null;
          directorsLink: {
            _type: "link";
            text?: string;
            type?: string;
            internalLink:
              | {
                  _type: "homepage";
                  slug: null;
                  title: null;
                }
              | {
                  _type: "page";
                  slug: Slug | null;
                  title: string | null;
                }
              | null;
            url?: string;
            email?: string;
            phone?: string;
            value?: string;
            blank?: boolean;
            parameters?: string;
            anchor?: string;
          } | null;
        }
      | {
          _id: string;
          _type: "chaptersList";
          _createdAt: string;
          _updatedAt: string;
          _rev: string;
          title?: string;
          header: string | null;
          chapters: Array<{
            title: string | null;
            image: {
              caption: string | null;
              assetId: string | null;
              assetPath: string | null;
              aspectRatio: number | null;
            } | null;
            descriptionColor: string | null;
            description: Array<{
              children?: Array<{
                marks?: Array<string>;
                text?: string;
                _type: "span";
                _key: string;
              }>;
              style?: "h1" | "h2" | "h3" | "h4" | "normal";
              listItem?: "bullet" | "number";
              markDefs?: Array<{
                href?: string;
                _type: "link";
                _key: string;
              }>;
              level?: number;
              _type: "block";
              _key: string;
            }> | null;
            link: {
              _type: "link";
              text?: string;
              type?: string;
              internalLink:
                | {
                    _type: "homepage";
                    slug: null;
                    title: null;
                  }
                | {
                    _type: "page";
                    slug: Slug | null;
                    title: string | null;
                  }
                | null;
              url?: string;
              email?: string;
              phone?: string;
              value?: string;
              blank?: boolean;
              parameters?: string;
              anchor?: string;
            } | null;
            linkColor: string | null;
            _type: "chapter";
            _key: string;
          }> | null;
        }
      | {
          _id: string;
          _type: "directorsList";
          _createdAt: string;
          _updatedAt: string;
          _rev: string;
          header: string | null;
          directorsByGroup: Array<{
            directorGroupName: string | null;
            directors: Array<{
              directorName: string | null;
              directorTitle: string | null;
              image: {
                caption: string | null;
                assetId: string | null;
                assetPath: string | null;
                aspectRatio: number | null;
              } | null;
              description: Array<{
                children?: Array<{
                  marks?: Array<string>;
                  text?: string;
                  _type: "span";
                  _key: string;
                }>;
                style?:
                  | "blockquote"
                  | "h1"
                  | "h2"
                  | "h3"
                  | "h4"
                  | "h5"
                  | "h6"
                  | "normal";
                listItem?: "bullet" | "number";
                markDefs?: Array<{
                  href?: string;
                  _type: "link";
                  _key: string;
                }>;
                level?: number;
                _type: "block";
                _key: string;
              }> | null;
            }> | null;
          }> | null;
        }
      | {
          _id: string;
          _type: "donation";
          _createdAt: string;
          _updatedAt: string;
          _rev: string;
          title: string | null;
          redHeader: string | null;
          plainHeader: string | null;
          description: Array<{
            children?: Array<{
              marks?: Array<string>;
              text?: string;
              _type: "span";
              _key: string;
            }>;
            style?: "h1" | "h2" | "h3" | "h4" | "leftBorder" | "normal";
            listItem?: "bullet" | "number";
            markDefs?: Array<{
              href?: string;
              _type: "link";
              _key: string;
            }>;
            level?: number;
            _type: "block";
            _key: string;
          }> | null;
          image: {
            caption: string | null;
            assetId: string | null;
            assetPath: string | null;
            aspectRatio: number | null;
          } | null;
          stats: {
            years: {
              number: string | null;
              text: string | null;
            } | null;
            chapters: {
              number: string | null;
              text: string | null;
            } | null;
            studentsSupported: {
              number: string | null;
              text: string | null;
            } | null;
          } | null;
        }
      | {
          _id: string;
          _type: "openerWithCarousel";
          _createdAt: string;
          _updatedAt: string;
          _rev: string;
          title?: string;
          header: string | null;
          subHeader: string | null;
          tagline: string | null;
          link?: Link;
          bgColor: string | null;
          photos: Array<{
            caption: string | null;
            assetId: string | null;
            assetPath: string | null;
            aspectRatio: number | null;
          }> | null;
        }
      | {
          _id: string;
          _type: "ourHistory";
          _createdAt: string;
          _updatedAt: string;
          _rev: string;
          title: string | null;
          header: string | null;
          timelineItems: Array<{
            header: string | null;
            description: Array<{
              children?: Array<{
                marks?: Array<string>;
                text?: string;
                _type: "span";
                _key: string;
              }>;
              style?:
                | "blockquote"
                | "h1"
                | "h2"
                | "h3"
                | "h4"
                | "h5"
                | "h6"
                | "normal";
              listItem?: "bullet" | "number";
              markDefs?: Array<{
                href?: string;
                _type: "link";
                _key: string;
              }>;
              level?: number;
              _type: "block";
              _key: string;
            }> | null;
            icon: {
              caption: string | null;
              assetId: string | null;
              assetPath: string | null;
              aspectRatio: number | null;
            } | null;
            year: {
              caption: string | null;
              assetId: string | null;
              assetPath: string | null;
              aspectRatio: number | null;
            } | null;
            _key: string;
          }> | null;
        }
      | {
          _id: string;
          _type: "ourProgram";
          _createdAt: string;
          _updatedAt: string;
          _rev: string;
          title: string | null;
          header: string | null;
          description: Array<{
            children?: Array<{
              marks?: Array<string>;
              text?: string;
              _type: "span";
              _key: string;
            }>;
            style?:
              | "blockquote"
              | "h1"
              | "h2"
              | "h3"
              | "h4"
              | "h5"
              | "h6"
              | "normal";
            listItem?: "bullet" | "number";
            markDefs?: Array<{
              href?: string;
              _type: "link";
              _key: string;
            }>;
            level?: number;
            _type: "block";
            _key: string;
          }> | null;
          missionHeader: string | null;
          mission: Array<{
            text: string | null;
            number: number | null;
            _key: string;
          }> | null;
          image: {
            caption: string | null;
            assetId: string | null;
            assetPath: string | null;
            aspectRatio: number | null;
          } | null;
        }
      | {
          _id: string;
          _type: "pressReleasesGallery";
          _createdAt: string;
          _updatedAt: string;
          _rev: string;
          title?: string;
          header?: string;
          tagText?: string;
          tagColor: string | null;
          pressReleases: Array<{
            link?: Link;
            image: {
              caption: string | null;
              assetId: string | null;
              assetPath: string | null;
              aspectRatio: number | null;
            } | null;
            _type: "pressReleases";
            _key: string;
          }> | null;
          helpImage: {
            caption: string | null;
            assetId: string | null;
            assetPath: string | null;
            aspectRatio: number | null;
          } | null;
          helpHeader: string | null;
          helpText: string | null;
        }
      | {
          _id: string;
          _type: "teamMembersBlock";
          _createdAt: string;
          _updatedAt: string;
          _rev: string;
          title?: string;
          header?: string;
          teamMembers: Array<{
            image: {
              caption: string | null;
              assetId: string | null;
              assetPath: string | null;
              aspectRatio: number | null;
            } | null;
            memberTitle?: string;
            memberName?: string;
            memberDescription?: Array<{
              children?: Array<{
                marks?: Array<string>;
                text?: string;
                _type: "span";
                _key: string;
              }>;
              style?: "h1" | "h2" | "h3" | "h4" | "normal";
              listItem?: "bullet" | "number";
              markDefs?: Array<{
                href?: string;
                _type: "link";
                _key: string;
              }>;
              level?: number;
              _type: "block";
              _key: string;
            }>;
            memberLink?: Link;
            _type: "teamMember";
            _key: string;
          }> | null;
        }
      | {
          _id: string;
          _type: "testimonialsBlock";
          _createdAt: string;
          _updatedAt: string;
          _rev: string;
          title: string | null;
          header: string | null;
          testimonials: Array<{
            icon: {
              caption: string | null;
              assetId: string | null;
              assetPath: string | null;
              aspectRatio: number | null;
            } | null;
            testimonialSource: string | null;
            testimonialContent: Array<{
              children?: Array<{
                marks?: Array<string>;
                text?: string;
                _type: "span";
                _key: string;
              }>;
              style?: "h3" | "normal" | "yellowH3";
              listItem?: "bullet" | "number";
              markDefs?: Array<{
                href?: string;
                _type: "link";
                _key: string;
              }>;
              level?: number;
              _type: "block";
              _key: string;
            }> | null;
          }> | null;
        }
      | {
          _id: string;
          _type: "whatWeDo";
          _createdAt: string;
          _updatedAt: string;
          _rev: string;
          title: string | null;
          header: string | null;
          link?: Link;
          description: Array<{
            children?: Array<{
              marks?: Array<string>;
              text?: string;
              _type: "span";
              _key: string;
            }>;
            style?:
              | "blockquote"
              | "h1"
              | "h2"
              | "h3"
              | "h4"
              | "h5"
              | "h6"
              | "normal";
            listItem?: "bullet" | "number";
            markDefs?: Array<{
              href?: string;
              _type: "link";
              _key: string;
            }>;
            level?: number;
            _type: "block";
            _key: string;
          }> | null;
          image: {
            caption: string | null;
            assetId: string | null;
            assetPath: string | null;
            aspectRatio: number | null;
          } | null;
        }
    > | null;
    SEO: {
      _type: "seo";
      metaTitle?: string;
      metaDescription?: string;
      openGraphTitle?: string;
      openGraphDescription?: string;
      openGraphImage: string | null;
      includeInSitemap?: boolean;
      disallowRobots?: boolean;
      initSeo?: boolean;
    } | null;
  } | null;
};
// Variable: pageQuery
// Query: {    'page': *[_type == 'page' && $slug == slug.current][0] {        ...,        title,        content[]->{    ...,    _type == 'openerWithCarousel' => {    _id,    _type,    header,    subHeader,    'bgColor': bgColor.hex,    tagline,      _type == "link" => {    ...,    internalLink->{_type,slug,title}  },    photos[] {    caption,    'assetId': asset->_id,    'assetPath': asset->path,    'aspectRatio': asset->metadata.dimensions.aspectRatio,}},    _type == 'testimonialsBlock' => {    _id,    title,    header,    testimonials[] {    icon {    caption,    'assetId': asset->_id,    'assetPath': asset->path,    'aspectRatio': asset->metadata.dimensions.aspectRatio,},    testimonialSource,    testimonialContent[] {      ...,        _type == "link" => {    ...,    internalLink->{_type,slug,title}  },    },}  },    _type == 'teamMembersBlock' => {    ...,    teamMembers[] {    ...,    image {    caption,    'assetId': asset->_id,    'assetPath': asset->path,    'aspectRatio': asset->metadata.dimensions.aspectRatio,},      _type == "link" => {    ...,    internalLink->{_type,slug,title}  }}},    _type == 'pressReleasesGallery' => {    ...,    'tagColor': tagColor.hex,    pressReleases[] {    ...,    image {    caption,    'assetId': asset->_id,    'assetPath': asset->path,    'aspectRatio': asset->metadata.dimensions.aspectRatio,},      _type == "link" => {    ...,    internalLink->{_type,slug,title}  }},    helpImage {    caption,    'assetId': asset->_id,    'assetPath': asset->path,    'aspectRatio': asset->metadata.dimensions.aspectRatio,},    helpHeader,    helpText},    _type == 'chaptersGallery' => {    ...,    title,    header,    subHeader,    chaptersLink {...,   _type == "link" => {    ...,    internalLink->{_type,slug,title}  }},    directorsLink {...,   _type == "link" => {    ...,    internalLink->{_type,slug,title}  }},    chapters[] {    ...,    chapterTitle,    image {    caption,    'assetId': asset->_id,    'assetPath': asset->path,    'aspectRatio': asset->metadata.dimensions.aspectRatio,},      _type == "link" => {    ...,    internalLink->{_type,slug,title}  }}},    _type == 'chapterComponent' => {    ...,    title,    header,    image {    caption,    'assetId': asset->_id,    'assetPath': asset->path,    'aspectRatio': asset->metadata.dimensions.aspectRatio,},    timeline[] {        ...,        title,        header,        subHeader,        description[] {            ...,              _type == "link" => {    ...,    internalLink->{_type,slug,title}  },        },            },    imageGallery[] {        ...,        image {    caption,    'assetId': asset->_id,    'assetPath': asset->path,    'aspectRatio': asset->metadata.dimensions.aspectRatio,},        imageColumnStart,        imageColumnEnd,        imageRowStart,        imageRowEnd,    }},    _type == 'chaptersList' => {    ...,    header,    chapters[] {        ...,        title,        description,        'descriptionColor': descriptionColor.hex,        image {    caption,    'assetId': asset->_id,    'assetPath': asset->path,    'aspectRatio': asset->metadata.dimensions.aspectRatio,},        'linkColor': linkColor.hex,        link {...,   _type == "link" => {    ...,    internalLink->{_type,slug,title}  }},    }},    _type == 'directorsList' => {    ...,    header,    directorsByGroup[] {        directorGroupName,        directors[] {            directorName,            directorTitle,            image {    caption,    'assetId': asset->_id,    'assetPath': asset->path,    'aspectRatio': asset->metadata.dimensions.aspectRatio,},            description[] {                ...,                  _type == "link" => {    ...,    internalLink->{_type,slug,title}  },            },        },    },},    _type == 'donation' => {    ...,    title,    redHeader,    plainHeader,    description[] {            ...,              _type == "link" => {    ...,    internalLink->{_type,slug,title}  },    },    image {    caption,    'assetId': asset->_id,    'assetPath': asset->path,    'aspectRatio': asset->metadata.dimensions.aspectRatio,},    stats {        ...,        years {            ...,            number,            text,        },        chapters {            ...,            number,            text,        },        studentsSupported {            ...,            number,            text,        },    }},    _type == 'whatWeDo' => {    ...,    title,    header,    description,    image {    caption,    'assetId': asset->_id,    'assetPath': asset->path,    'aspectRatio': asset->metadata.dimensions.aspectRatio,},      _type == "link" => {    ...,    internalLink->{_type,slug,title}  },},    _type == 'ourProgram' => {    ...,    title,    header,    description,    missionHeader,    mission[] {        ...,        number,        text,    },    image {    caption,    'assetId': asset->_id,    'assetPath': asset->path,    'aspectRatio': asset->metadata.dimensions.aspectRatio,},},    _type == 'ourHistory' => {    ...,    title,    header,    timelineItems[] {        ...,        header,        description,        icon {    caption,    'assetId': asset->_id,    'assetPath': asset->path,    'aspectRatio': asset->metadata.dimensions.aspectRatio,},        year {    caption,    'assetId': asset->_id,    'assetPath': asset->path,    'aspectRatio': asset->metadata.dimensions.aspectRatio,},    }}},        SEO {    ...,    'openGraphImage': openGraphImage.asset->url,},    }}
export type PageQueryResult = {
  page: {
    _id: string;
    _type: "page";
    _createdAt: string;
    _updatedAt: string;
    _rev: string;
    title: string | null;
    slug?: Slug;
    content: Array<
      | {
          _id: string;
          _type: "chapterComponent";
          _createdAt: string;
          _updatedAt: string;
          _rev: string;
          title: string | null;
          header: string | null;
          image: {
            caption: string | null;
            assetId: string | null;
            assetPath: string | null;
            aspectRatio: number | null;
          } | null;
          timeline: Array<{
            title: string | null;
            header: string | null;
            subHeader: string | null;
            description: Array<{
              children?: Array<{
                marks?: Array<string>;
                text?: string;
                _type: "span";
                _key: string;
              }>;
              style?: "h1" | "h2" | "h3" | "h4" | "normal";
              listItem?: "bullet" | "number";
              markDefs?: Array<{
                href?: string;
                _type: "link";
                _key: string;
              }>;
              level?: number;
              _type: "block";
              _key: string;
            }> | null;
            _type: "timelineItem";
            _key: string;
          }> | null;
          imageGallery: Array<{
            image: {
              caption: string | null;
              assetId: string | null;
              assetPath: string | null;
              aspectRatio: number | null;
            } | null;
            imageColumnStart: number | null;
            imageColumnEnd: number | null;
            imageRowStart: number | null;
            imageRowEnd: number | null;
            _type: "galleryImage";
            _key: string;
          }> | null;
        }
      | {
          _id: string;
          _type: "chaptersGallery";
          _createdAt: string;
          _updatedAt: string;
          _rev: string;
          title: string | null;
          header: string | null;
          subHeader: string | null;
          chapters: Array<{
            chapterTitle: string | null;
            link?: Link;
            image: {
              caption: string | null;
              assetId: string | null;
              assetPath: string | null;
              aspectRatio: number | null;
            } | null;
            _type: "chapter";
            _key: string;
          }> | null;
          chaptersLink: {
            _type: "link";
            text?: string;
            type?: string;
            internalLink:
              | {
                  _type: "homepage";
                  slug: null;
                  title: null;
                }
              | {
                  _type: "page";
                  slug: Slug | null;
                  title: string | null;
                }
              | null;
            url?: string;
            email?: string;
            phone?: string;
            value?: string;
            blank?: boolean;
            parameters?: string;
            anchor?: string;
          } | null;
          directorsLink: {
            _type: "link";
            text?: string;
            type?: string;
            internalLink:
              | {
                  _type: "homepage";
                  slug: null;
                  title: null;
                }
              | {
                  _type: "page";
                  slug: Slug | null;
                  title: string | null;
                }
              | null;
            url?: string;
            email?: string;
            phone?: string;
            value?: string;
            blank?: boolean;
            parameters?: string;
            anchor?: string;
          } | null;
        }
      | {
          _id: string;
          _type: "chaptersList";
          _createdAt: string;
          _updatedAt: string;
          _rev: string;
          title?: string;
          header: string | null;
          chapters: Array<{
            title: string | null;
            image: {
              caption: string | null;
              assetId: string | null;
              assetPath: string | null;
              aspectRatio: number | null;
            } | null;
            descriptionColor: string | null;
            description: Array<{
              children?: Array<{
                marks?: Array<string>;
                text?: string;
                _type: "span";
                _key: string;
              }>;
              style?: "h1" | "h2" | "h3" | "h4" | "normal";
              listItem?: "bullet" | "number";
              markDefs?: Array<{
                href?: string;
                _type: "link";
                _key: string;
              }>;
              level?: number;
              _type: "block";
              _key: string;
            }> | null;
            link: {
              _type: "link";
              text?: string;
              type?: string;
              internalLink:
                | {
                    _type: "homepage";
                    slug: null;
                    title: null;
                  }
                | {
                    _type: "page";
                    slug: Slug | null;
                    title: string | null;
                  }
                | null;
              url?: string;
              email?: string;
              phone?: string;
              value?: string;
              blank?: boolean;
              parameters?: string;
              anchor?: string;
            } | null;
            linkColor: string | null;
            _type: "chapter";
            _key: string;
          }> | null;
        }
      | {
          _id: string;
          _type: "directorsList";
          _createdAt: string;
          _updatedAt: string;
          _rev: string;
          header: string | null;
          directorsByGroup: Array<{
            directorGroupName: string | null;
            directors: Array<{
              directorName: string | null;
              directorTitle: string | null;
              image: {
                caption: string | null;
                assetId: string | null;
                assetPath: string | null;
                aspectRatio: number | null;
              } | null;
              description: Array<{
                children?: Array<{
                  marks?: Array<string>;
                  text?: string;
                  _type: "span";
                  _key: string;
                }>;
                style?:
                  | "blockquote"
                  | "h1"
                  | "h2"
                  | "h3"
                  | "h4"
                  | "h5"
                  | "h6"
                  | "normal";
                listItem?: "bullet" | "number";
                markDefs?: Array<{
                  href?: string;
                  _type: "link";
                  _key: string;
                }>;
                level?: number;
                _type: "block";
                _key: string;
              }> | null;
            }> | null;
          }> | null;
        }
      | {
          _id: string;
          _type: "donation";
          _createdAt: string;
          _updatedAt: string;
          _rev: string;
          title: string | null;
          redHeader: string | null;
          plainHeader: string | null;
          description: Array<{
            children?: Array<{
              marks?: Array<string>;
              text?: string;
              _type: "span";
              _key: string;
            }>;
            style?: "h1" | "h2" | "h3" | "h4" | "leftBorder" | "normal";
            listItem?: "bullet" | "number";
            markDefs?: Array<{
              href?: string;
              _type: "link";
              _key: string;
            }>;
            level?: number;
            _type: "block";
            _key: string;
          }> | null;
          image: {
            caption: string | null;
            assetId: string | null;
            assetPath: string | null;
            aspectRatio: number | null;
          } | null;
          stats: {
            years: {
              number: string | null;
              text: string | null;
            } | null;
            chapters: {
              number: string | null;
              text: string | null;
            } | null;
            studentsSupported: {
              number: string | null;
              text: string | null;
            } | null;
          } | null;
        }
      | {
          _id: string;
          _type: "openerWithCarousel";
          _createdAt: string;
          _updatedAt: string;
          _rev: string;
          title?: string;
          header: string | null;
          subHeader: string | null;
          tagline: string | null;
          link?: Link;
          bgColor: string | null;
          photos: Array<{
            caption: string | null;
            assetId: string | null;
            assetPath: string | null;
            aspectRatio: number | null;
          }> | null;
        }
      | {
          _id: string;
          _type: "ourHistory";
          _createdAt: string;
          _updatedAt: string;
          _rev: string;
          title: string | null;
          header: string | null;
          timelineItems: Array<{
            header: string | null;
            description: Array<{
              children?: Array<{
                marks?: Array<string>;
                text?: string;
                _type: "span";
                _key: string;
              }>;
              style?:
                | "blockquote"
                | "h1"
                | "h2"
                | "h3"
                | "h4"
                | "h5"
                | "h6"
                | "normal";
              listItem?: "bullet" | "number";
              markDefs?: Array<{
                href?: string;
                _type: "link";
                _key: string;
              }>;
              level?: number;
              _type: "block";
              _key: string;
            }> | null;
            icon: {
              caption: string | null;
              assetId: string | null;
              assetPath: string | null;
              aspectRatio: number | null;
            } | null;
            year: {
              caption: string | null;
              assetId: string | null;
              assetPath: string | null;
              aspectRatio: number | null;
            } | null;
            _key: string;
          }> | null;
        }
      | {
          _id: string;
          _type: "ourProgram";
          _createdAt: string;
          _updatedAt: string;
          _rev: string;
          title: string | null;
          header: string | null;
          description: Array<{
            children?: Array<{
              marks?: Array<string>;
              text?: string;
              _type: "span";
              _key: string;
            }>;
            style?:
              | "blockquote"
              | "h1"
              | "h2"
              | "h3"
              | "h4"
              | "h5"
              | "h6"
              | "normal";
            listItem?: "bullet" | "number";
            markDefs?: Array<{
              href?: string;
              _type: "link";
              _key: string;
            }>;
            level?: number;
            _type: "block";
            _key: string;
          }> | null;
          missionHeader: string | null;
          mission: Array<{
            text: string | null;
            number: number | null;
            _key: string;
          }> | null;
          image: {
            caption: string | null;
            assetId: string | null;
            assetPath: string | null;
            aspectRatio: number | null;
          } | null;
        }
      | {
          _id: string;
          _type: "pressReleasesGallery";
          _createdAt: string;
          _updatedAt: string;
          _rev: string;
          title?: string;
          header?: string;
          tagText?: string;
          tagColor: string | null;
          pressReleases: Array<{
            link?: Link;
            image: {
              caption: string | null;
              assetId: string | null;
              assetPath: string | null;
              aspectRatio: number | null;
            } | null;
            _type: "pressReleases";
            _key: string;
          }> | null;
          helpImage: {
            caption: string | null;
            assetId: string | null;
            assetPath: string | null;
            aspectRatio: number | null;
          } | null;
          helpHeader: string | null;
          helpText: string | null;
        }
      | {
          _id: string;
          _type: "teamMembersBlock";
          _createdAt: string;
          _updatedAt: string;
          _rev: string;
          title?: string;
          header?: string;
          teamMembers: Array<{
            image: {
              caption: string | null;
              assetId: string | null;
              assetPath: string | null;
              aspectRatio: number | null;
            } | null;
            memberTitle?: string;
            memberName?: string;
            memberDescription?: Array<{
              children?: Array<{
                marks?: Array<string>;
                text?: string;
                _type: "span";
                _key: string;
              }>;
              style?: "h1" | "h2" | "h3" | "h4" | "normal";
              listItem?: "bullet" | "number";
              markDefs?: Array<{
                href?: string;
                _type: "link";
                _key: string;
              }>;
              level?: number;
              _type: "block";
              _key: string;
            }>;
            memberLink?: Link;
            _type: "teamMember";
            _key: string;
          }> | null;
        }
      | {
          _id: string;
          _type: "testimonialsBlock";
          _createdAt: string;
          _updatedAt: string;
          _rev: string;
          title: string | null;
          header: string | null;
          testimonials: Array<{
            icon: {
              caption: string | null;
              assetId: string | null;
              assetPath: string | null;
              aspectRatio: number | null;
            } | null;
            testimonialSource: string | null;
            testimonialContent: Array<{
              children?: Array<{
                marks?: Array<string>;
                text?: string;
                _type: "span";
                _key: string;
              }>;
              style?: "h3" | "normal" | "yellowH3";
              listItem?: "bullet" | "number";
              markDefs?: Array<{
                href?: string;
                _type: "link";
                _key: string;
              }>;
              level?: number;
              _type: "block";
              _key: string;
            }> | null;
          }> | null;
        }
      | {
          _id: string;
          _type: "whatWeDo";
          _createdAt: string;
          _updatedAt: string;
          _rev: string;
          title: string | null;
          header: string | null;
          link?: Link;
          description: Array<{
            children?: Array<{
              marks?: Array<string>;
              text?: string;
              _type: "span";
              _key: string;
            }>;
            style?:
              | "blockquote"
              | "h1"
              | "h2"
              | "h3"
              | "h4"
              | "h5"
              | "h6"
              | "normal";
            listItem?: "bullet" | "number";
            markDefs?: Array<{
              href?: string;
              _type: "link";
              _key: string;
            }>;
            level?: number;
            _type: "block";
            _key: string;
          }> | null;
          image: {
            caption: string | null;
            assetId: string | null;
            assetPath: string | null;
            aspectRatio: number | null;
          } | null;
        }
    > | null;
    SEO: {
      _type: "seo";
      metaTitle?: string;
      metaDescription?: string;
      openGraphTitle?: string;
      openGraphDescription?: string;
      openGraphImage: string | null;
      includeInSitemap?: boolean;
      disallowRobots?: boolean;
      initSeo?: boolean;
    } | null;
  } | null;
};

// Query TypeMap
import "@sanity/client";
declare module "@sanity/client" {
  interface SanityQueries {
    "{\n    _id,\n    _type,\n    header,\n    subHeader,\n    'bgColor': bgColor.hex,\n    tagline,\n    \n  _type == \"link\" => {\n    ...,\n    internalLink->{_type,slug,title}\n  }\n,\n    photos[] {\n    caption,\n    'assetId': asset->_id,\n    'assetPath': asset->path,\n    'aspectRatio': asset->metadata.dimensions.aspectRatio,\n}\n}": OpenerWithCarouselDataResult;
    "{\n    'testimonialsBlock': *[_type == 'testimonialsBlock'][0] {\n    _id,\n    title,\n    header,\n    testimonials[] {\n    icon {\n    caption,\n    'assetId': asset->_id,\n    'assetPath': asset->path,\n    'aspectRatio': asset->metadata.dimensions.aspectRatio,\n},\n    testimonialSource,\n    testimonialContent[] {\n      ...,\n      \n  _type == \"link\" => {\n    ...,\n    internalLink->{_type,slug,title}\n  }\n,\n    },\n}\n  }\n}": TestimonialsBlockQueryResult;
    "{\n    'teamMembersBlock': *[_type == 'teamMembersBlock'][0] {\n    ...,\n    teamMembers[] {\n    ...,\n    image {\n    caption,\n    'assetId': asset->_id,\n    'assetPath': asset->path,\n    'aspectRatio': asset->metadata.dimensions.aspectRatio,\n},\n    \n  _type == \"link\" => {\n    ...,\n    internalLink->{_type,slug,title}\n  }\n\n}\n}\n}": TeamMembersBlockQueryResult;
    "{\n    'pressReleasesGallery': *[_type == 'pressReleasesGallery'][0] {\n    ...,\n    'tagColor': tagColor.hex,\n    pressReleases[] {\n    ...,\n    image {\n    caption,\n    'assetId': asset->_id,\n    'assetPath': asset->path,\n    'aspectRatio': asset->metadata.dimensions.aspectRatio,\n},\n    \n  _type == \"link\" => {\n    ...,\n    internalLink->{_type,slug,title}\n  }\n\n},\n    helpImage {\n    caption,\n    'assetId': asset->_id,\n    'assetPath': asset->path,\n    'aspectRatio': asset->metadata.dimensions.aspectRatio,\n},\n    helpHeader,\n    helpText\n}\n}": PressReleasesGalleryQueryResult;
    "{\n    'chaptersGallery': *[_type == 'chaptersGallery'][0] {\n    ...,\n    title,\n    header,\n    subHeader,\n    chaptersLink {..., \n  _type == \"link\" => {\n    ...,\n    internalLink->{_type,slug,title}\n  }\n},\n    directorsLink {..., \n  _type == \"link\" => {\n    ...,\n    internalLink->{_type,slug,title}\n  }\n},\n    chapters[] {\n    ...,\n    chapterTitle,\n    image {\n    caption,\n    'assetId': asset->_id,\n    'assetPath': asset->path,\n    'aspectRatio': asset->metadata.dimensions.aspectRatio,\n},\n    \n  _type == \"link\" => {\n    ...,\n    internalLink->{_type,slug,title}\n  }\n\n}\n}\n}": ChaptersGalleryQueryResult;
    "{\n    'chapterComponent': *[_type == 'chapterComponent'][0] {\n    ...,\n    title,\n    header,\n    image {\n    caption,\n    'assetId': asset->_id,\n    'assetPath': asset->path,\n    'aspectRatio': asset->metadata.dimensions.aspectRatio,\n},\n    timeline[] {\n        ...,\n        title,\n        header,\n        subHeader,\n        description[] {\n            ...,\n            \n  _type == \"link\" => {\n    ...,\n    internalLink->{_type,slug,title}\n  }\n,\n        },\n        \n    },\n    imageGallery[] {\n        ...,\n        image {\n    caption,\n    'assetId': asset->_id,\n    'assetPath': asset->path,\n    'aspectRatio': asset->metadata.dimensions.aspectRatio,\n},\n        imageColumnStart,\n        imageColumnEnd,\n        imageRowStart,\n        imageRowEnd,\n    }\n}\n}": ChapterComponentQueryResult;
    "{\n    'chaptersList': *[_type == 'chaptersList'][0] {\n    ...,\n    header,\n    chapters[] {\n        ...,\n        title,\n        description,\n        'descriptionColor': descriptionColor.hex,\n        image {\n    caption,\n    'assetId': asset->_id,\n    'assetPath': asset->path,\n    'aspectRatio': asset->metadata.dimensions.aspectRatio,\n},\n        'linkColor': linkColor.hex,\n        link {..., \n  _type == \"link\" => {\n    ...,\n    internalLink->{_type,slug,title}\n  }\n},\n    }\n}\n}": ChaptersListQueryResult;
    "{\n    'directorsList': *[_type == 'directorsList'][0] {\n    ...,\n    header,\n    directorsByGroup[] {\n        directorGroupName,\n        directors[] {\n            directorName,\n            directorTitle,\n            image {\n    caption,\n    'assetId': asset->_id,\n    'assetPath': asset->path,\n    'aspectRatio': asset->metadata.dimensions.aspectRatio,\n},\n            description[] {\n                ...,\n                \n  _type == \"link\" => {\n    ...,\n    internalLink->{_type,slug,title}\n  }\n,\n            },\n        },\n    },\n}\n}": DirectorsListQueryResult;
    "{\n    'donation': *[_type == 'donation'][0] {\n    ...,\n    title,\n    redHeader,\n    plainHeader,\n    description[] {\n            ...,\n            \n  _type == \"link\" => {\n    ...,\n    internalLink->{_type,slug,title}\n  }\n,\n    },\n    image {\n    caption,\n    'assetId': asset->_id,\n    'assetPath': asset->path,\n    'aspectRatio': asset->metadata.dimensions.aspectRatio,\n},\n    stats {\n        ...,\n        years {\n            ...,\n            number,\n            text,\n        },\n        chapters {\n            ...,\n            number,\n            text,\n        },\n        studentsSupported {\n            ...,\n            number,\n            text,\n        },\n    }\n}\n}": DonationQueryResult;
    "{\n    'whatWeDo': *[_type == 'whatWeDo'][0] {\n    ...,\n    title,\n    header,\n    description,\n    image {\n    caption,\n    'assetId': asset->_id,\n    'assetPath': asset->path,\n    'aspectRatio': asset->metadata.dimensions.aspectRatio,\n},\n    \n  _type == \"link\" => {\n    ...,\n    internalLink->{_type,slug,title}\n  }\n,\n}\n}": WhatWeDoQueryResult;
    "{\n    'ourProgram': *[_type == 'ourProgram'][0] {\n    ...,\n    title,\n    header,\n    description,\n    missionHeader,\n    mission[] {\n        ...,\n        number,\n        text,\n    },\n    image {\n    caption,\n    'assetId': asset->_id,\n    'assetPath': asset->path,\n    'aspectRatio': asset->metadata.dimensions.aspectRatio,\n},\n}\n}": OurProgramQueryResult;
    "{\n    'ourHistory': *[_type == 'ourHistory'][0] {\n    ...,\n    title,\n    header,\n    timelineItems[] {\n        ...,\n        header,\n        description,\n        icon {\n    caption,\n    'assetId': asset->_id,\n    'assetPath': asset->path,\n    'aspectRatio': asset->metadata.dimensions.aspectRatio,\n},\n        year {\n    caption,\n    'assetId': asset->_id,\n    'assetPath': asset->path,\n    'aspectRatio': asset->metadata.dimensions.aspectRatio,\n},\n    }\n}\n}": OurHistoryQueryResult;
    "{\n    'header': *[_type == 'header'][0] {\n        navList[] {\n            ...,\n            \n  _type == \"link\" => {\n    ...,\n    internalLink->{_type,slug,title}\n  }\n,\n        }\n    }\n}": HeaderQueryResult;
    "{\n    'footer': *[_type == 'footer'][0] {\n            ...,\n            socials[] \n    {\n    ...,\n    icon {\n    caption,\n    'assetId': asset->_id,\n    'assetPath': asset->path,\n    'aspectRatio': asset->metadata.dimensions.aspectRatio,\n},\n    \n  _type == \"link\" => {\n    ...,\n    internalLink->{_type,slug,title}\n  }\n\n    }\n\n    }\n}": FooterQueryResult;
    "\n    *[_type == 'siteSettings'][0] {\n        SEO {\n    ...,\n    'openGraphImage': openGraphImage.asset->url,\n},\n    }\n": SiteSettingsQueryResult;
    "{\n    'homepage': *[_type == 'homepage'][0] {\n        ...,\n        content[]->{\n    ...,\n    _type == 'openerWithCarousel' => {\n    _id,\n    _type,\n    header,\n    subHeader,\n    'bgColor': bgColor.hex,\n    tagline,\n    \n  _type == \"link\" => {\n    ...,\n    internalLink->{_type,slug,title}\n  }\n,\n    photos[] {\n    caption,\n    'assetId': asset->_id,\n    'assetPath': asset->path,\n    'aspectRatio': asset->metadata.dimensions.aspectRatio,\n}\n},\n    _type == 'testimonialsBlock' => {\n    _id,\n    title,\n    header,\n    testimonials[] {\n    icon {\n    caption,\n    'assetId': asset->_id,\n    'assetPath': asset->path,\n    'aspectRatio': asset->metadata.dimensions.aspectRatio,\n},\n    testimonialSource,\n    testimonialContent[] {\n      ...,\n      \n  _type == \"link\" => {\n    ...,\n    internalLink->{_type,slug,title}\n  }\n,\n    },\n}\n  },\n    _type == 'teamMembersBlock' => {\n    ...,\n    teamMembers[] {\n    ...,\n    image {\n    caption,\n    'assetId': asset->_id,\n    'assetPath': asset->path,\n    'aspectRatio': asset->metadata.dimensions.aspectRatio,\n},\n    \n  _type == \"link\" => {\n    ...,\n    internalLink->{_type,slug,title}\n  }\n\n}\n},\n    _type == 'pressReleasesGallery' => {\n    ...,\n    'tagColor': tagColor.hex,\n    pressReleases[] {\n    ...,\n    image {\n    caption,\n    'assetId': asset->_id,\n    'assetPath': asset->path,\n    'aspectRatio': asset->metadata.dimensions.aspectRatio,\n},\n    \n  _type == \"link\" => {\n    ...,\n    internalLink->{_type,slug,title}\n  }\n\n},\n    helpImage {\n    caption,\n    'assetId': asset->_id,\n    'assetPath': asset->path,\n    'aspectRatio': asset->metadata.dimensions.aspectRatio,\n},\n    helpHeader,\n    helpText\n},\n    _type == 'chaptersGallery' => {\n    ...,\n    title,\n    header,\n    subHeader,\n    chaptersLink {..., \n  _type == \"link\" => {\n    ...,\n    internalLink->{_type,slug,title}\n  }\n},\n    directorsLink {..., \n  _type == \"link\" => {\n    ...,\n    internalLink->{_type,slug,title}\n  }\n},\n    chapters[] {\n    ...,\n    chapterTitle,\n    image {\n    caption,\n    'assetId': asset->_id,\n    'assetPath': asset->path,\n    'aspectRatio': asset->metadata.dimensions.aspectRatio,\n},\n    \n  _type == \"link\" => {\n    ...,\n    internalLink->{_type,slug,title}\n  }\n\n}\n},\n    _type == 'chapterComponent' => {\n    ...,\n    title,\n    header,\n    image {\n    caption,\n    'assetId': asset->_id,\n    'assetPath': asset->path,\n    'aspectRatio': asset->metadata.dimensions.aspectRatio,\n},\n    timeline[] {\n        ...,\n        title,\n        header,\n        subHeader,\n        description[] {\n            ...,\n            \n  _type == \"link\" => {\n    ...,\n    internalLink->{_type,slug,title}\n  }\n,\n        },\n        \n    },\n    imageGallery[] {\n        ...,\n        image {\n    caption,\n    'assetId': asset->_id,\n    'assetPath': asset->path,\n    'aspectRatio': asset->metadata.dimensions.aspectRatio,\n},\n        imageColumnStart,\n        imageColumnEnd,\n        imageRowStart,\n        imageRowEnd,\n    }\n},\n    _type == 'chaptersList' => {\n    ...,\n    header,\n    chapters[] {\n        ...,\n        title,\n        description,\n        'descriptionColor': descriptionColor.hex,\n        image {\n    caption,\n    'assetId': asset->_id,\n    'assetPath': asset->path,\n    'aspectRatio': asset->metadata.dimensions.aspectRatio,\n},\n        'linkColor': linkColor.hex,\n        link {..., \n  _type == \"link\" => {\n    ...,\n    internalLink->{_type,slug,title}\n  }\n},\n    }\n},\n    _type == 'directorsList' => {\n    ...,\n    header,\n    directorsByGroup[] {\n        directorGroupName,\n        directors[] {\n            directorName,\n            directorTitle,\n            image {\n    caption,\n    'assetId': asset->_id,\n    'assetPath': asset->path,\n    'aspectRatio': asset->metadata.dimensions.aspectRatio,\n},\n            description[] {\n                ...,\n                \n  _type == \"link\" => {\n    ...,\n    internalLink->{_type,slug,title}\n  }\n,\n            },\n        },\n    },\n},\n    _type == 'donation' => {\n    ...,\n    title,\n    redHeader,\n    plainHeader,\n    description[] {\n            ...,\n            \n  _type == \"link\" => {\n    ...,\n    internalLink->{_type,slug,title}\n  }\n,\n    },\n    image {\n    caption,\n    'assetId': asset->_id,\n    'assetPath': asset->path,\n    'aspectRatio': asset->metadata.dimensions.aspectRatio,\n},\n    stats {\n        ...,\n        years {\n            ...,\n            number,\n            text,\n        },\n        chapters {\n            ...,\n            number,\n            text,\n        },\n        studentsSupported {\n            ...,\n            number,\n            text,\n        },\n    }\n},\n    _type == 'whatWeDo' => {\n    ...,\n    title,\n    header,\n    description,\n    image {\n    caption,\n    'assetId': asset->_id,\n    'assetPath': asset->path,\n    'aspectRatio': asset->metadata.dimensions.aspectRatio,\n},\n    \n  _type == \"link\" => {\n    ...,\n    internalLink->{_type,slug,title}\n  }\n,\n},\n    _type == 'ourProgram' => {\n    ...,\n    title,\n    header,\n    description,\n    missionHeader,\n    mission[] {\n        ...,\n        number,\n        text,\n    },\n    image {\n    caption,\n    'assetId': asset->_id,\n    'assetPath': asset->path,\n    'aspectRatio': asset->metadata.dimensions.aspectRatio,\n},\n},\n    _type == 'ourHistory' => {\n    ...,\n    title,\n    header,\n    timelineItems[] {\n        ...,\n        header,\n        description,\n        icon {\n    caption,\n    'assetId': asset->_id,\n    'assetPath': asset->path,\n    'aspectRatio': asset->metadata.dimensions.aspectRatio,\n},\n        year {\n    caption,\n    'assetId': asset->_id,\n    'assetPath': asset->path,\n    'aspectRatio': asset->metadata.dimensions.aspectRatio,\n},\n    }\n}\n},\n        SEO {\n    ...,\n    'openGraphImage': openGraphImage.asset->url,\n},\n    }\n}": HomepageQueryResult;
    "{\n    'page': *[_type == 'page' && $slug == slug.current][0] {\n        ...,\n        title,\n        content[]->{\n    ...,\n    _type == 'openerWithCarousel' => {\n    _id,\n    _type,\n    header,\n    subHeader,\n    'bgColor': bgColor.hex,\n    tagline,\n    \n  _type == \"link\" => {\n    ...,\n    internalLink->{_type,slug,title}\n  }\n,\n    photos[] {\n    caption,\n    'assetId': asset->_id,\n    'assetPath': asset->path,\n    'aspectRatio': asset->metadata.dimensions.aspectRatio,\n}\n},\n    _type == 'testimonialsBlock' => {\n    _id,\n    title,\n    header,\n    testimonials[] {\n    icon {\n    caption,\n    'assetId': asset->_id,\n    'assetPath': asset->path,\n    'aspectRatio': asset->metadata.dimensions.aspectRatio,\n},\n    testimonialSource,\n    testimonialContent[] {\n      ...,\n      \n  _type == \"link\" => {\n    ...,\n    internalLink->{_type,slug,title}\n  }\n,\n    },\n}\n  },\n    _type == 'teamMembersBlock' => {\n    ...,\n    teamMembers[] {\n    ...,\n    image {\n    caption,\n    'assetId': asset->_id,\n    'assetPath': asset->path,\n    'aspectRatio': asset->metadata.dimensions.aspectRatio,\n},\n    \n  _type == \"link\" => {\n    ...,\n    internalLink->{_type,slug,title}\n  }\n\n}\n},\n    _type == 'pressReleasesGallery' => {\n    ...,\n    'tagColor': tagColor.hex,\n    pressReleases[] {\n    ...,\n    image {\n    caption,\n    'assetId': asset->_id,\n    'assetPath': asset->path,\n    'aspectRatio': asset->metadata.dimensions.aspectRatio,\n},\n    \n  _type == \"link\" => {\n    ...,\n    internalLink->{_type,slug,title}\n  }\n\n},\n    helpImage {\n    caption,\n    'assetId': asset->_id,\n    'assetPath': asset->path,\n    'aspectRatio': asset->metadata.dimensions.aspectRatio,\n},\n    helpHeader,\n    helpText\n},\n    _type == 'chaptersGallery' => {\n    ...,\n    title,\n    header,\n    subHeader,\n    chaptersLink {..., \n  _type == \"link\" => {\n    ...,\n    internalLink->{_type,slug,title}\n  }\n},\n    directorsLink {..., \n  _type == \"link\" => {\n    ...,\n    internalLink->{_type,slug,title}\n  }\n},\n    chapters[] {\n    ...,\n    chapterTitle,\n    image {\n    caption,\n    'assetId': asset->_id,\n    'assetPath': asset->path,\n    'aspectRatio': asset->metadata.dimensions.aspectRatio,\n},\n    \n  _type == \"link\" => {\n    ...,\n    internalLink->{_type,slug,title}\n  }\n\n}\n},\n    _type == 'chapterComponent' => {\n    ...,\n    title,\n    header,\n    image {\n    caption,\n    'assetId': asset->_id,\n    'assetPath': asset->path,\n    'aspectRatio': asset->metadata.dimensions.aspectRatio,\n},\n    timeline[] {\n        ...,\n        title,\n        header,\n        subHeader,\n        description[] {\n            ...,\n            \n  _type == \"link\" => {\n    ...,\n    internalLink->{_type,slug,title}\n  }\n,\n        },\n        \n    },\n    imageGallery[] {\n        ...,\n        image {\n    caption,\n    'assetId': asset->_id,\n    'assetPath': asset->path,\n    'aspectRatio': asset->metadata.dimensions.aspectRatio,\n},\n        imageColumnStart,\n        imageColumnEnd,\n        imageRowStart,\n        imageRowEnd,\n    }\n},\n    _type == 'chaptersList' => {\n    ...,\n    header,\n    chapters[] {\n        ...,\n        title,\n        description,\n        'descriptionColor': descriptionColor.hex,\n        image {\n    caption,\n    'assetId': asset->_id,\n    'assetPath': asset->path,\n    'aspectRatio': asset->metadata.dimensions.aspectRatio,\n},\n        'linkColor': linkColor.hex,\n        link {..., \n  _type == \"link\" => {\n    ...,\n    internalLink->{_type,slug,title}\n  }\n},\n    }\n},\n    _type == 'directorsList' => {\n    ...,\n    header,\n    directorsByGroup[] {\n        directorGroupName,\n        directors[] {\n            directorName,\n            directorTitle,\n            image {\n    caption,\n    'assetId': asset->_id,\n    'assetPath': asset->path,\n    'aspectRatio': asset->metadata.dimensions.aspectRatio,\n},\n            description[] {\n                ...,\n                \n  _type == \"link\" => {\n    ...,\n    internalLink->{_type,slug,title}\n  }\n,\n            },\n        },\n    },\n},\n    _type == 'donation' => {\n    ...,\n    title,\n    redHeader,\n    plainHeader,\n    description[] {\n            ...,\n            \n  _type == \"link\" => {\n    ...,\n    internalLink->{_type,slug,title}\n  }\n,\n    },\n    image {\n    caption,\n    'assetId': asset->_id,\n    'assetPath': asset->path,\n    'aspectRatio': asset->metadata.dimensions.aspectRatio,\n},\n    stats {\n        ...,\n        years {\n            ...,\n            number,\n            text,\n        },\n        chapters {\n            ...,\n            number,\n            text,\n        },\n        studentsSupported {\n            ...,\n            number,\n            text,\n        },\n    }\n},\n    _type == 'whatWeDo' => {\n    ...,\n    title,\n    header,\n    description,\n    image {\n    caption,\n    'assetId': asset->_id,\n    'assetPath': asset->path,\n    'aspectRatio': asset->metadata.dimensions.aspectRatio,\n},\n    \n  _type == \"link\" => {\n    ...,\n    internalLink->{_type,slug,title}\n  }\n,\n},\n    _type == 'ourProgram' => {\n    ...,\n    title,\n    header,\n    description,\n    missionHeader,\n    mission[] {\n        ...,\n        number,\n        text,\n    },\n    image {\n    caption,\n    'assetId': asset->_id,\n    'assetPath': asset->path,\n    'aspectRatio': asset->metadata.dimensions.aspectRatio,\n},\n},\n    _type == 'ourHistory' => {\n    ...,\n    title,\n    header,\n    timelineItems[] {\n        ...,\n        header,\n        description,\n        icon {\n    caption,\n    'assetId': asset->_id,\n    'assetPath': asset->path,\n    'aspectRatio': asset->metadata.dimensions.aspectRatio,\n},\n        year {\n    caption,\n    'assetId': asset->_id,\n    'assetPath': asset->path,\n    'aspectRatio': asset->metadata.dimensions.aspectRatio,\n},\n    }\n}\n},\n        SEO {\n    ...,\n    'openGraphImage': openGraphImage.asset->url,\n},\n    }\n}": PageQueryResult;
  }
}
